{
  "address": "60806040526004361061003e575f3560e01c80633ccfd60b146100425780633fa4f2451461006c5780635524107714610096578063d0e30db0146100be575b5f5ffd5b34801561004d575f5ffd5b506100566100c8565b60405161006391906101ce565b60405180910390f35b348015610077575f5ffd5b5061008061015c565b60405161008d91906101ce565b60405180910390f35b3480156100a1575f5ffd5b506100bc60048036038101906100b79190610215565b610161565b005b6100c661016a565b005b5f600a5f541161010d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101049061029a565b60405180910390fd5b5f4790503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610154573d5f5f3e3d5ffd5b508091505090565b5f5481565b805f8190555050565b670de0b6b3a764000034116101b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ab90610302565b60405180910390fd5b565b5f819050919050565b6101c8816101b6565b82525050565b5f6020820190506101e15f8301846101bf565b92915050565b5f5ffd5b6101f4816101b6565b81146101fe575f5ffd5b50565b5f8135905061020f816101eb565b92915050565b5f6020828403121561022a576102296101e7565b5b5f61023784828501610201565b91505092915050565b5f82825260208201905092915050565b7f76616c2077726f6e6700000000000000000000000000000000000000000000005f82015250565b5f610284600983610240565b915061028f82610250565b602082019050919050565b5f6020820190508181035f8301526102b181610278565b9050919050565b7f6c6f77206465706f7369740000000000000000000000000000000000000000005f82015250565b5f6102ec600b83610240565b91506102f7826102b8565b602082019050919050565b5f6020820190508181035f830152610319816102e0565b905091905056fea2646970667358221220a3db02d01aa12a919e625de898b48c1035a1172715a554eb8e73102bdacdf9d764736f6c634300081e0033",
  "decompilation": {
    "problems": {},
    "stor_defs": [
      [
        "def",
        "value",
        0,
        [
          "mask",
          256,
          0
        ]
      ]
    ],
    "functions": [
      {
        "hash": "0x3ccfd60b",
        "name": "withdraw()",
        "color_name": "withdraw()",
        "abi_name": "withdraw()",
        "length": [
          9,
          368
        ],
        "getter": null,
        "const": null,
        "payable": false,
        "print": "\u001b[95mdef \u001b[0mwithdraw(): \u001b[38;5;8m# not payable\u001b[0m\n  if \u001b[32mvalue\u001b[0m\u001b[1m <= \u001b[0m10:\n      revert with 0, 'val wrong'\n  call caller with:\n     value eth.balance(this.address) \u001b[38;5;8mwei\u001b[0m\n       gas 2300 * is_zero(value) \u001b[38;5;8mwei\u001b[0m\n  if not ext_call.success:\n      revert with ext_call.return_data[0 len return_data.size]\n  return eth.balance(this.address)",
        "trace": [
          [
            "if",
            [
              "le",
              [
                "stor",
                256,
                0,
                [
                  "name",
                  "value",
                  0
                ]
              ],
              10
            ],
            [
              [
                "revert",
                [
                  "data",
                  0,
                  32,
                  9,
                  "'val wrong'"
                ]
              ]
            ],
            [
              [
                "call",
                [
                  "mul",
                  2300,
                  [
                    "iszero",
                    [
                      "balance",
                      "address"
                    ]
                  ]
                ],
                "caller",
                [
                  "balance",
                  "address"
                ],
                null,
                null
              ],
              [
                "if",
                [
                  "iszero",
                  "ext_call.success"
                ],
                [
                  [
                    "revert",
                    [
                      "ext_call.return_data",
                      0,
                      "returndatasize"
                    ]
                  ]
                ],
                [
                  [
                    "return",
                    [
                      "balance",
                      "address"
                    ]
                  ]
                ]
              ]
            ]
          ]
        ],
        "params": {}
      },
      {
        "hash": "0x3fa4f245",
        "name": "value()",
        "color_name": "value()",
        "abi_name": "value()",
        "length": [
          2,
          72
        ],
        "getter": [
          "storage",
          256,
          0,
          0
        ],
        "const": null,
        "payable": false,
        "print": "\u001b[95mdef \u001b[0mvalue(): \u001b[38;5;8m# not payable\u001b[0m\n  return \u001b[32mvalue\u001b[0m",
        "trace": [
          [
            "return",
            [
              "stor",
              256,
              0,
              [
                "name",
                "value",
                0
              ]
            ]
          ]
        ],
        "params": {}
      },
      {
        "hash": "0x55241077",
        "name": "setValue(uint256 _value)",
        "color_name": "setValue(uint256 \u001b[32m_value\u001b[0m)",
        "abi_name": "setValue(uint256)",
        "length": [
          4,
          205
        ],
        "getter": null,
        "const": null,
        "payable": false,
        "print": "\u001b[95mdef \u001b[0msetValue(uint256 \u001b[32m_value\u001b[0m): \u001b[38;5;8m# not payable\u001b[0m\n  require calldata.size - 4\u001b[1m >=\u2032 \u001b[0m32\n  require \u001b[32m_value\u001b[0m\u001b[1m == \u001b[0m\u001b[32m_value\u001b[0m\n  \u001b[32mvalue\u001b[0m = \u001b[32m_value\u001b[0m",
        "trace": [
          [
            "if",
            [
              "slt",
              [
                "add",
                -4,
                "calldatasize"
              ],
              32
            ],
            [
              [
                "revert",
                0
              ]
            ],
            [
              [
                "if",
                [
                  "iszero",
                  [
                    "eq",
                    [
                      "param",
                      "_value"
                    ],
                    [
                      "param",
                      "_value"
                    ]
                  ]
                ],
                [
                  [
                    "revert",
                    0
                  ]
                ],
                [
                  [
                    "store",
                    256,
                    0,
                    [
                      "name",
                      "value",
                      0
                    ],
                    [
                      "param",
                      "_value"
                    ]
                  ],
                  [
                    "stop"
                  ]
                ]
              ]
            ]
          ]
        ],
        "params": {
          "4": [
            "uint256",
            "_value"
          ]
        }
      },
      {
        "hash": "0xd0e30db0",
        "name": "deposit()",
        "color_name": "deposit()",
        "abi_name": "deposit()",
        "length": [
          3,
          110
        ],
        "getter": null,
        "const": null,
        "payable": true,
        "print": "\u001b[95mdef \u001b[0mdeposit()\u001b[95m payable\u001b[0m: \n  if call.value\u001b[1m <= \u001b[0m10^18:\n      revert with 0, 'low deposit'",
        "trace": [
          [
            "if",
            [
              "le",
              "callvalue",
              1000000000000000000
            ],
            [
              [
                "revert",
                [
                  "data",
                  0,
                  32,
                  11,
                  "'low deposit'"
                ]
              ]
            ],
            [
              [
                "stop"
              ]
            ]
          ]
        ],
        "params": {}
      },
      {
        "hash": "_fallback",
        "name": "_fallback(?)",
        "color_name": "_fallback(?)",
        "abi_name": "_fallback(?)",
        "length": [
          2,
          80
        ],
        "getter": null,
        "const": null,
        "payable": false,
        "print": "\u001b[95mdef \u001b[0m_fallback(?): \u001b[38;5;8m# not payable, default function\u001b[0m\n  revert",
        "trace": [
          [
            "revert",
            0
          ]
        ],
        "params": {}
      }
    ]
  },
  "asm": [
    "0x0, push1, 0x80",
    "0x2, push1, 0x40",
    "0x4, mstore, ",
    "0x5, push1, 0x4",
    "0x7, calldatasize, ",
    "0x8, lt, ",
    "0x9, push2, 0x3e",
    "0xc, jumpi, ",
    "0xd, push0, 0x0",
    "0xe, calldataload, ",
    "0xf, push1, 0xe0",
    "0x11, shr, ",
    "0x12, dup1, ",
    "0x13, push4, 0x3ccfd60b",
    "0x18, eq, ",
    "0x19, push2, 0x42",
    "0x1c, jumpi, ",
    "0x1d, dup1, ",
    "0x1e, push4, 0x3fa4f245",
    "0x23, eq, ",
    "0x24, push2, 0x6c",
    "0x27, jumpi, ",
    "0x28, dup1, ",
    "0x29, push4, 0x55241077",
    "0x2e, eq, ",
    "0x2f, push2, 0x96",
    "0x32, jumpi, ",
    "0x33, dup1, ",
    "0x34, push4, 0xd0e30db0",
    "0x39, eq, ",
    "0x3a, push2, 0xbe",
    "0x3d, jumpi, ",
    "0x3e, jumpdest, ",
    "0x3f, push0, 0x0",
    "0x40, push0, 0x0",
    "0x41, revert, ",
    "0x42, jumpdest, ",
    "0x43, callvalue, ",
    "0x44, dup1, ",
    "0x45, iszero, ",
    "0x46, push2, 0x4d",
    "0x49, jumpi, ",
    "0x4a, push0, 0x0",
    "0x4b, push0, 0x0",
    "0x4c, revert, ",
    "0x4d, jumpdest, ",
    "0x4e, pop, ",
    "0x4f, push2, 0x56",
    "0x52, push2, 0xc8",
    "0x55, jump, ",
    "0x56, jumpdest, ",
    "0x57, push1, 0x40",
    "0x59, mload, ",
    "0x5a, push2, 0x63",
    "0x5d, swap2, ",
    "0x5e, swap1, ",
    "0x5f, push2, 0x1ce",
    "0x62, jump, ",
    "0x63, jumpdest, ",
    "0x64, push1, 0x40",
    "0x66, mload, ",
    "0x67, dup1, ",
    "0x68, swap2, ",
    "0x69, sub, ",
    "0x6a, swap1, ",
    "0x6b, return, ",
    "0x6c, jumpdest, ",
    "0x6d, callvalue, ",
    "0x6e, dup1, ",
    "0x6f, iszero, ",
    "0x70, push2, 0x77",
    "0x73, jumpi, ",
    "0x74, push0, 0x0",
    "0x75, push0, 0x0",
    "0x76, revert, ",
    "0x77, jumpdest, ",
    "0x78, pop, ",
    "0x79, push2, 0x80",
    "0x7c, push2, 0x15c",
    "0x7f, jump, ",
    "0x80, jumpdest, ",
    "0x81, push1, 0x40",
    "0x83, mload, ",
    "0x84, push2, 0x8d",
    "0x87, swap2, ",
    "0x88, swap1, ",
    "0x89, push2, 0x1ce",
    "0x8c, jump, ",
    "0x8d, jumpdest, ",
    "0x8e, push1, 0x40",
    "0x90, mload, ",
    "0x91, dup1, ",
    "0x92, swap2, ",
    "0x93, sub, ",
    "0x94, swap1, ",
    "0x95, return, ",
    "0x96, jumpdest, ",
    "0x97, callvalue, ",
    "0x98, dup1, ",
    "0x99, iszero, ",
    "0x9a, push2, 0xa1",
    "0x9d, jumpi, ",
    "0x9e, push0, 0x0",
    "0x9f, push0, 0x0",
    "0xa0, revert, ",
    "0xa1, jumpdest, ",
    "0xa2, pop, ",
    "0xa3, push2, 0xbc",
    "0xa6, push1, 0x4",
    "0xa8, dup1, ",
    "0xa9, calldatasize, ",
    "0xaa, sub, ",
    "0xab, dup2, ",
    "0xac, add, ",
    "0xad, swap1, ",
    "0xae, push2, 0xb7",
    "0xb1, swap2, ",
    "0xb2, swap1, ",
    "0xb3, push2, 0x215",
    "0xb6, jump, ",
    "0xb7, jumpdest, ",
    "0xb8, push2, 0x161",
    "0xbb, jump, ",
    "0xbc, jumpdest, ",
    "0xbd, stop, ",
    "0xbe, jumpdest, ",
    "0xbf, push2, 0xc6",
    "0xc2, push2, 0x16a",
    "0xc5, jump, ",
    "0xc6, jumpdest, ",
    "0xc7, stop, ",
    "0xc8, jumpdest, ",
    "0xc9, push0, 0x0",
    "0xca, push1, 0xa",
    "0xcc, push0, 0x0",
    "0xcd, sload, ",
    "0xce, gt, ",
    "0xcf, push2, 0x10d",
    "0xd2, jumpi, ",
    "0xd3, push1, 0x40",
    "0xd5, mload, ",
    "0xd6, push32, 0x8c379a000000000000000000000000000000000000000000000000000000000",
    "0xf7, dup2, ",
    "0xf8, mstore, ",
    "0xf9, push1, 0x4",
    "0xfb, add, ",
    "0xfc, push2, 0x104",
    "0xff, swap1, ",
    "0x100, push2, 0x29a",
    "0x103, jump, ",
    "0x104, jumpdest, ",
    "0x105, push1, 0x40",
    "0x107, mload, ",
    "0x108, dup1, ",
    "0x109, swap2, ",
    "0x10a, sub, ",
    "0x10b, swap1, ",
    "0x10c, revert, ",
    "0x10d, jumpdest, ",
    "0x10e, push0, 0x0",
    "0x10f, selfbalance, ",
    "0x110, swap1, ",
    "0x111, pop, ",
    "0x112, caller, ",
    "0x113, push20, 0xffffffffffffffffffffffffffffffffffffffff",
    "0x128, and, ",
    "0x129, push2, 0x8fc",
    "0x12c, dup3, ",
    "0x12d, swap1, ",
    "0x12e, dup2, ",
    "0x12f, iszero, ",
    "0x130, mul, ",
    "0x131, swap1, ",
    "0x132, push1, 0x40",
    "0x134, mload, ",
    "0x135, push0, 0x0",
    "0x136, push1, 0x40",
    "0x138, mload, ",
    "0x139, dup1, ",
    "0x13a, dup4, ",
    "0x13b, sub, ",
    "0x13c, dup2, ",
    "0x13d, dup6, ",
    "0x13e, dup9, ",
    "0x13f, dup9, ",
    "0x140, call, ",
    "0x141, swap4, ",
    "0x142, pop, ",
    "0x143, pop, ",
    "0x144, pop, ",
    "0x145, pop, ",
    "0x146, iszero, ",
    "0x147, dup1, ",
    "0x148, iszero, ",
    "0x149, push2, 0x154",
    "0x14c, jumpi, ",
    "0x14d, returndatasize, ",
    "0x14e, push0, 0x0",
    "0x14f, push0, 0x0",
    "0x150, returndatacopy, ",
    "0x151, returndatasize, ",
    "0x152, push0, 0x0",
    "0x153, revert, ",
    "0x154, jumpdest, ",
    "0x155, pop, ",
    "0x156, dup1, ",
    "0x157, swap2, ",
    "0x158, pop, ",
    "0x159, pop, ",
    "0x15a, swap1, ",
    "0x15b, jump, ",
    "0x15c, jumpdest, ",
    "0x15d, push0, 0x0",
    "0x15e, sload, ",
    "0x15f, dup2, ",
    "0x160, jump, ",
    "0x161, jumpdest, ",
    "0x162, dup1, ",
    "0x163, push0, 0x0",
    "0x164, dup2, ",
    "0x165, swap1, ",
    "0x166, sstore, ",
    "0x167, pop, ",
    "0x168, pop, ",
    "0x169, jump, ",
    "0x16a, jumpdest, ",
    "0x16b, push8, 0xde0b6b3a7640000",
    "0x174, callvalue, ",
    "0x175, gt, ",
    "0x176, push2, 0x1b4",
    "0x179, jumpi, ",
    "0x17a, push1, 0x40",
    "0x17c, mload, ",
    "0x17d, push32, 0x8c379a000000000000000000000000000000000000000000000000000000000",
    "0x19e, dup2, ",
    "0x19f, mstore, ",
    "0x1a0, push1, 0x4",
    "0x1a2, add, ",
    "0x1a3, push2, 0x1ab",
    "0x1a6, swap1, ",
    "0x1a7, push2, 0x302",
    "0x1aa, jump, ",
    "0x1ab, jumpdest, ",
    "0x1ac, push1, 0x40",
    "0x1ae, mload, ",
    "0x1af, dup1, ",
    "0x1b0, swap2, ",
    "0x1b1, sub, ",
    "0x1b2, swap1, ",
    "0x1b3, revert, ",
    "0x1b4, jumpdest, ",
    "0x1b5, jump, ",
    "0x1b6, jumpdest, ",
    "0x1b7, push0, 0x0",
    "0x1b8, dup2, ",
    "0x1b9, swap1, ",
    "0x1ba, pop, ",
    "0x1bb, swap2, ",
    "0x1bc, swap1, ",
    "0x1bd, pop, ",
    "0x1be, jump, ",
    "0x1bf, jumpdest, ",
    "0x1c0, push2, 0x1c8",
    "0x1c3, dup2, ",
    "0x1c4, push2, 0x1b6",
    "0x1c7, jump, ",
    "0x1c8, jumpdest, ",
    "0x1c9, dup3, ",
    "0x1ca, mstore, ",
    "0x1cb, pop, ",
    "0x1cc, pop, ",
    "0x1cd, jump, ",
    "0x1ce, jumpdest, ",
    "0x1cf, push0, 0x0",
    "0x1d0, push1, 0x20",
    "0x1d2, dup3, ",
    "0x1d3, add, ",
    "0x1d4, swap1, ",
    "0x1d5, pop, ",
    "0x1d6, push2, 0x1e1",
    "0x1d9, push0, 0x0",
    "0x1da, dup4, ",
    "0x1db, add, ",
    "0x1dc, dup5, ",
    "0x1dd, push2, 0x1bf",
    "0x1e0, jump, ",
    "0x1e1, jumpdest, ",
    "0x1e2, swap3, ",
    "0x1e3, swap2, ",
    "0x1e4, pop, ",
    "0x1e5, pop, ",
    "0x1e6, jump, ",
    "0x1e7, jumpdest, ",
    "0x1e8, push0, 0x0",
    "0x1e9, push0, 0x0",
    "0x1ea, revert, ",
    "0x1eb, jumpdest, ",
    "0x1ec, push2, 0x1f4",
    "0x1ef, dup2, ",
    "0x1f0, push2, 0x1b6",
    "0x1f3, jump, ",
    "0x1f4, jumpdest, ",
    "0x1f5, dup2, ",
    "0x1f6, eq, ",
    "0x1f7, push2, 0x1fe",
    "0x1fa, jumpi, ",
    "0x1fb, push0, 0x0",
    "0x1fc, push0, 0x0",
    "0x1fd, revert, ",
    "0x1fe, jumpdest, ",
    "0x1ff, pop, ",
    "0x200, jump, ",
    "0x201, jumpdest, ",
    "0x202, push0, 0x0",
    "0x203, dup2, ",
    "0x204, calldataload, ",
    "0x205, swap1, ",
    "0x206, pop, ",
    "0x207, push2, 0x20f",
    "0x20a, dup2, ",
    "0x20b, push2, 0x1eb",
    "0x20e, jump, ",
    "0x20f, jumpdest, ",
    "0x210, swap3, ",
    "0x211, swap2, ",
    "0x212, pop, ",
    "0x213, pop, ",
    "0x214, jump, ",
    "0x215, jumpdest, ",
    "0x216, push0, 0x0",
    "0x217, push1, 0x20",
    "0x219, dup3, ",
    "0x21a, dup5, ",
    "0x21b, sub, ",
    "0x21c, slt, ",
    "0x21d, iszero, ",
    "0x21e, push2, 0x22a",
    "0x221, jumpi, ",
    "0x222, push2, 0x229",
    "0x225, push2, 0x1e7",
    "0x228, jump, ",
    "0x229, jumpdest, ",
    "0x22a, jumpdest, ",
    "0x22b, push0, 0x0",
    "0x22c, push2, 0x237",
    "0x22f, dup5, ",
    "0x230, dup3, ",
    "0x231, dup6, ",
    "0x232, add, ",
    "0x233, push2, 0x201",
    "0x236, jump, ",
    "0x237, jumpdest, ",
    "0x238, swap2, ",
    "0x239, pop, ",
    "0x23a, pop, ",
    "0x23b, swap3, ",
    "0x23c, swap2, ",
    "0x23d, pop, ",
    "0x23e, pop, ",
    "0x23f, jump, ",
    "0x240, jumpdest, ",
    "0x241, push0, 0x0",
    "0x242, dup3, ",
    "0x243, dup3, ",
    "0x244, mstore, ",
    "0x245, push1, 0x20",
    "0x247, dup3, ",
    "0x248, add, ",
    "0x249, swap1, ",
    "0x24a, pop, ",
    "0x24b, swap3, ",
    "0x24c, swap2, ",
    "0x24d, pop, ",
    "0x24e, pop, ",
    "0x24f, jump, ",
    "0x250, jumpdest, ",
    "0x251, push32, 0x76616c2077726f6e670000000000000000000000000000000000000000000000",
    "0x272, push0, 0x0",
    "0x273, dup3, ",
    "0x274, add, ",
    "0x275, mstore, ",
    "0x276, pop, ",
    "0x277, jump, ",
    "0x278, jumpdest, ",
    "0x279, push0, 0x0",
    "0x27a, push2, 0x284",
    "0x27d, push1, 0x9",
    "0x27f, dup4, ",
    "0x280, push2, 0x240",
    "0x283, jump, ",
    "0x284, jumpdest, ",
    "0x285, swap2, ",
    "0x286, pop, ",
    "0x287, push2, 0x28f",
    "0x28a, dup3, ",
    "0x28b, push2, 0x250",
    "0x28e, jump, ",
    "0x28f, jumpdest, ",
    "0x290, push1, 0x20",
    "0x292, dup3, ",
    "0x293, add, ",
    "0x294, swap1, ",
    "0x295, pop, ",
    "0x296, swap2, ",
    "0x297, swap1, ",
    "0x298, pop, ",
    "0x299, jump, ",
    "0x29a, jumpdest, ",
    "0x29b, push0, 0x0",
    "0x29c, push1, 0x20",
    "0x29e, dup3, ",
    "0x29f, add, ",
    "0x2a0, swap1, ",
    "0x2a1, pop, ",
    "0x2a2, dup2, ",
    "0x2a3, dup2, ",
    "0x2a4, sub, ",
    "0x2a5, push0, 0x0",
    "0x2a6, dup4, ",
    "0x2a7, add, ",
    "0x2a8, mstore, ",
    "0x2a9, push2, 0x2b1",
    "0x2ac, dup2, ",
    "0x2ad, push2, 0x278",
    "0x2b0, jump, ",
    "0x2b1, jumpdest, ",
    "0x2b2, swap1, ",
    "0x2b3, pop, ",
    "0x2b4, swap2, ",
    "0x2b5, swap1, ",
    "0x2b6, pop, ",
    "0x2b7, jump, ",
    "0x2b8, jumpdest, ",
    "0x2b9, push32, 0x6c6f77206465706f736974000000000000000000000000000000000000000000",
    "0x2da, push0, 0x0",
    "0x2db, dup3, ",
    "0x2dc, add, ",
    "0x2dd, mstore, ",
    "0x2de, pop, ",
    "0x2df, jump, ",
    "0x2e0, jumpdest, ",
    "0x2e1, push0, 0x0",
    "0x2e2, push2, 0x2ec",
    "0x2e5, push1, 0xb",
    "0x2e7, dup4, ",
    "0x2e8, push2, 0x240",
    "0x2eb, jump, ",
    "0x2ec, jumpdest, ",
    "0x2ed, swap2, ",
    "0x2ee, pop, ",
    "0x2ef, push2, 0x2f7",
    "0x2f2, dup3, ",
    "0x2f3, push2, 0x2b8",
    "0x2f6, jump, ",
    "0x2f7, jumpdest, ",
    "0x2f8, push1, 0x20",
    "0x2fa, dup3, ",
    "0x2fb, add, ",
    "0x2fc, swap1, ",
    "0x2fd, pop, ",
    "0x2fe, swap2, ",
    "0x2ff, swap1, ",
    "0x300, pop, ",
    "0x301, jump, ",
    "0x302, jumpdest, ",
    "0x303, push0, 0x0",
    "0x304, push1, 0x20",
    "0x306, dup3, ",
    "0x307, add, ",
    "0x308, swap1, ",
    "0x309, pop, ",
    "0x30a, dup2, ",
    "0x30b, dup2, ",
    "0x30c, sub, ",
    "0x30d, push0, 0x0",
    "0x30e, dup4, ",
    "0x30f, add, ",
    "0x310, mstore, ",
    "0x311, push2, 0x319",
    "0x314, dup2, ",
    "0x315, push2, 0x2e0",
    "0x318, jump, ",
    "0x319, jumpdest, ",
    "0x31a, swap1, ",
    "0x31b, pop, ",
    "0x31c, swap2, ",
    "0x31d, swap1, ",
    "0x31e, pop, ",
    "0x31f, jump, ",
    "0x320, invalid, ",
    "0x321, log2, ",
    "0x322, push5, 0x6970667358",
    "0x328, UNKNOWN, 0x22",
    "0x329, slt, ",
    "0x32a, sha3, ",
    "0x32b, log3, ",
    "0x32c, UNKNOWN, 0xdb",
    "0x32d, mul, ",
    "0x32e, UNKNOWN, 0xd0",
    "0x32f, byte, ",
    "0x330, log1, ",
    "0x331, UNKNOWN, 0x2a",
    "0x332, swap2, ",
    "0x333, swap15, ",
    "0x334, push3, 0x5de898",
    "0x338, UNKNOWN, 0xb4",
    "0x339, dup13, ",
    "0x33a, lt, ",
    "0x33b, calldataload, ",
    "0x33c, log1, ",
    "0x33d, or, ",
    "0x33e, UNKNOWN, 0x27",
    "0x33f, iszero, ",
    "0x340, UNKNOWN, 0xa5",
    "0x341, sload, ",
    "0x342, UNKNOWN, 0xeb",
    "0x343, dup15, ",
    "0x344, push20, 0x102bdacdf9d764736f6c634300081e0033"
  ]
}